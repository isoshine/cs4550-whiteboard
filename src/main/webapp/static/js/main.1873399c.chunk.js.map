{"version":3,"sources":["serviceWorker.js","reducers/moduleReducer.js","services/CourseService.js","components/CourseRowComponent.js","components/CourseTableComponent.js","components/CourseCardComponent.js","components/CourseGridComponent.js","containers/CourseListContainer.js","components/ModuleListComponent.js","services/ModuleService.js","containers/ModuleListContainer.js","components/LessonTabsComponent.js","services/LessonService.js","containers/LessonTabsContainer.js","components/TopicPillsComponent.js","containers/TopicPillsContainer.js","services/TopicService.js","containers/CourseEditorContainer.js","components/HomeComponent.js","components/SignInComponent.js","components/SignUpComponent.js","components/ProfileComponent.js","components/Whiteboard.js","App.js","reducers/lessonReducer.js","reducers/topicReducer.js","index.js"],"names":["Boolean","window","location","hostname","match","initialState","newModuleTitle","modules","moduleReducer","state","event","type","map","module","_id","updatedModule","newModule","filter","moduleId","course","fetch","method","body","JSON","stringify","headers","then","response","json","courseId","CourseRowComponent","edit","props","setEdit","setState","save","courseService","status","updateCourseTitle","newTitle","prevState","title","className","this","key","to","onChange","target","value","owner","modified","onClick","deleteCourse","React","Component","CourseTableComponent","courses","CourseCardComponent","CourseGridComponent","CourseListContainer","layout","params","newCourseTitle","setLayout","history","push","addCourse","newCourse","Date","toDateString","theActualNewCourse","courseToDelete","actualArrayOfCourses","prevProp","snapshot","placeholder","ModuleListComponent","editModule","findModules","updateModule","deleteModule","addModule","ModuleListContainer","connect","dispatch","ModuleService","courseModules","findAllModules","actualModules","actualNewModule","LessonTabsComponent","newLessonTitle","editLesson","findLessons","data-toggle","role","lessons","lesson","updateLesson","deleteLesson","addLesson","lessonId","newLesson","LessonTabsContainer","lessonReducer","LessonService","actualLesson","actualLessons","TopicPillsComponent","newTopicTitle","editTopic","findTopics","topics","topic","updateTopic","deleteTopic","addTopic","TopicPillsContainer","ownProps","topicReducer","topicId","newTopic","actualTopic","actualTopics","CourseEditorContainer","HomeComponent","SignInComponent","htmlFor","id","href","SignUpComponent","ProfileComponent","readOnly","Whiteboard","path","exact","component","CourseEditor","App","action","reducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1873399c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","//Finite State Machine\n//(S1) --e1 --> (S2)\n//(S2) --e2 --> (S3)\n\nconst initialState = {\n    newModuleTitle: \"\",\n    modules: []\n};\n\n//a reducer is a finite state machine that takes 2 arguments: current state, action\nconst moduleReducer = (state=initialState, event) => {\n    switch (event.type) {\n        case \"FIND_MODULES\":\n            return {\n                ...state,\n                modules: event.modules\n            };\n        case \"UPDATE_MODULE\":\n            return {\n                ...state,\n                modules: state.modules.map(\n                    module => module._id === event.updatedModule._id ?\n                            event.updatedModule : module)\n            };\n        case \"FIND_ALL_MODULES\":\n            return {\n                ...state,\n                modules: event.modules\n            };\n        case \"ADD_MODULE\":\n            return {\n                modules: [\n                    ...state.modules,\n                    event.newModule\n                ]\n            };\n        case \"DELETE_MODULE\":\n            return {\n                modules: state.modules.filter(module => module._id !== event.moduleId)\n            };\n        default:\n            return state;\n    }\n};\n\nexport default moduleReducer;\n","const createCourse = (course) => {\n    //first fetch, !! by default fetch is a GET request\n    return fetch(\"https://wbdv-generic-server.herokuapp.com/api/001479351/courses\", {\n        //change the default GET request to POST request\n        method: \"POST\",\n        //embed data that we want to create inside of the body as a JSON file\n        body: JSON.stringify(course),\n        //how is this data encoded? what is the data type for this?\n        headers: {\n            \"content-type\": \"application/json\"\n        }\n    })\n        .then(response => response.json())\n};\n\n\nconst deleteCourse = (courseId) => {\n    return fetch(\"https://wbdv-generic-server.herokuapp.com/api/001479351/courses/\" + courseId, {\n        method: \"DELETE\",\n    })\n        .then(response => response.json())\n};\n\nconst updateCourse = (courseId, course) => {\n    return fetch(\"https://wbdv-generic-server.herokuapp.com/api/001479351/courses/\" + courseId, {\n        //change the default GET request to PUT request\n        method: \"PUT\",\n        body: JSON.stringify(course),\n        headers: {\n            \"content-type\": \"application/json\"\n        }\n    })\n        .then(response => response.json())\n};\n\n\nconst findCourseById = (courseId) => {\n    return fetch(\"https://wbdv-generic-server.herokuapp.com/api/001479351/courses/\" + courseId)\n        .then(response => response.json())\n};\n\nconst findAllCourses = () => {\n    //first we fetch the data from remote server\n    return fetch(\"https://wbdv-generic-server.herokuapp.com/api/001479351/courses\")\n    //then we handle the response (convert to JSON)\n        .then(response => response.json())\n};\n\n\n//we can export individually or we can export as one big object\nexport default {\n    //\"createCourse\": createCourse,\n    //\"deleteCourse\": deleteCourse,\n    //\"findCourseById\": findCourseById,\n    //\"findAllCourses\": findAllCourses\n    createCourse,\n    deleteCourse,\n    findCourseById,\n    findAllCourses,\n    updateCourse\n}","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport courseService from \"../services/CourseService\";\n\nexport default class CourseRowComponent extends React.Component {\n    //the local state field will show whether an element is currently being \"edited\" or not\n    state = {\n        edit: false,\n\n        //this is our own copy of course\n        course: this.props.course\n    };\n\n    //function to set the local state editing to T/F\n    setEdit = (edit) =>\n        this.setState({edit: edit});\n\n\n    save = () => {\n        courseService.updateCourse(\n            this.state.course._id,\n            //our course should already have the new title\n            this.state.course)\n            //after status comes back as positive, we can set the setEdit to false\n            .then(status => this.setEdit(false))\n    };\n\n    updateCourseTitle = (newTitle) =>\n        this.setState(prevState => ({\n            course: {\n                ...prevState.course,\n                title: newTitle\n            }\n        }));\n\n    render() {\n        return (\n            //reminder: props are read only !!!\n        <tr className={this.state.edit ? \"table-secondary\": \"\"} key={this.props.course._id}>\n            <td>\n                {/*Making the title and input field mutually exclusive to each other\n                if the state is not in edit-mode, show title\n                if the state is in edit-mode, show input field*/}\n                {!this.state.edit &&\n                    // below code = \"/editor/\"+ this.state.course._id\n                    <Link to={`/editor/${this.state.course._id}`}>\n                        {this.state.course.title}\n                    </Link>\n                        }\n\n\n                {this.state.edit && <input\n                    className=\"wbdv-form wbdv-input form-control\"\n                    onChange={(event) => this.updateCourseTitle(event.target.value)}\n                    value={this.state.course.title}/>}\n            </td>\n\n            <td>{this.state.course.owner}</td>\n            <td>{this.state.course.modified}</td>\n            <td>\n                {!this.state.edit &&\n                <button\n                    className=\"wbdv-btn wbdv-edit btn btn-secondary\"\n                    onClick={() => this.setEdit(true)}>Edit</button>\n                }\n\n                {this.state.edit &&\n                <span>\n                    <button\n                        className=\"wbdv-btn wbdv-save btn btn-primary\"\n                        onClick={this.save}>Save</button>\n                    <button\n                        className=\"wbdv-btn wbdv-delete btn btn-danger\"\n                        onClick={() => this.props.deleteCourse(this.props.course)}>\n                        Delete\n                </button>\n                </span> }\n            </td>\n        </tr>\n        )\n    }\n}","import React from \"react\";\nimport CourseRowComponent from \"./CourseRowComponent\";\n\nexport default class CourseTableComponent extends React.Component {\n    render() {\n        return (\n\n            <div>\n                <h3></h3>\n\n                <table className=\"wbdv-table table\">\n                    <thead>\n                    <tr>\n                        <th className=\"wbdv-course-title\">Title</th>\n                        <th className=\"wbdv-course-owner\">Owner</th>\n                        <th className=\"wbdv-course-modified\">Last Modified</th>\n                        <th>\n                            <button className=\"wbdv-btn wbdv-sort btn btn-light\">Sort</button>\n                        </th>\n                    </tr>\n                    </thead>\n\n                    <tbody>\n                    {\n                        //we want to iterate over the array\n                        this.props.courses.map(course =>\n                            <CourseRowComponent\n                                deleteCourse={this.props.deleteCourse}\n                                key={course._id}\n                                course={course}/> )\n                    }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport courseService from \"../services/CourseService\";\n\nexport default class CourseCardComponent extends React.Component {\n    state = {\n        edit: false,\n        course: this.props.course\n    };\n\n    setEdit = (edit) =>\n        this.setState({edit: edit});\n\n    save = () => {\n        courseService.updateCourse(\n            this.state.course._id,\n            this.state.course)\n            .then(status => this.setEdit(false))\n    };\n\n    updateCourseTitle = (newTitle) =>\n        this.setState(prevState => ({\n            course: {\n                ...prevState.course,\n                title: newTitle\n            }\n        }));\n\n\n    render() {\n        return (\n\n            <div className=\"col mb-4\"\n                 key={this.props.course._id}>\n\n                <div className={this.state.edit ?\n                    \"wbdv-card card text-center border-primary bg-light\" :\n                    \"wbdv-card card text-center bg-light\"}>\n\n                    <h5> &nbsp; </h5>\n                    <h3 className=\"wbdv-card-title card-title text-center\">\n\n                        <div>\n                            {!this.state.edit &&\n                            <Link to={`/editor/${this.state.course._id}`}>\n                                {this.state.course.title}\n                            </Link>}\n                        </div>\n                        <div>\n                            {this.state.edit &&\n                            <input className=\"wbdv-card-input form-control\"\n                                   onChange={(event) => this.updateCourseTitle(event.target.value)}\n                                   value={this.state.course.title}/>\n                            }\n                        </div>\n                    </h3>\n\n                    <div className=\"wbdv-card-body card-body\">\n                        <p className=\"wbdv-card-text card-text\">Owner: {this.state.course.owner}</p>\n                        <p className=\"wbdv-card-text card-text\">\n                            <small className=\"text-muted\">\n                                Last Modified: {this.state.course.modified}\n                            </small>\n                        </p>\n                        <div>\n                            {!this.state.edit &&\n                            <button className=\"wbdv-edit wbdv-btn btn btn-secondary\"\n                                    onClick={() => this.setEdit(true)}>\n                                Edit\n                            </button>}\n                            {this.state.edit &&\n                            <span>\n                                <button className=\"wbdv-btn wbdv-save btn btn-primary\"\n                                        onClick={this.save}>\n                                Save\n                                </button>\n                                <button className=\"wbdv-btn wbdv-delete btn btn-danger\"\n                                        onClick={() => this.props.deleteCourse(this.props.course)}>\n                                Delete\n                                </button>\n                            </span>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport CourseCardComponent from \"./CourseCardComponent\";\n\nexport default class CourseGridComponent extends React.Component {\n    render() {\n        return (\n            <div>\n                <h3></h3>\n\n                <div className=\"wbdv-grid row row-cols-1 row-cols-xs-1 row-cols-sm-2\n                                row-cols-md-3 row-cols-lg-4 row-cols-xl-6\">\n                    {\n                        this.props.courses.map(course =>\n                            <CourseCardComponent\n                                deleteCourse={this.props.deleteCourse}\n                                key={course._id}\n                                course={course}/>)\n                    }\n                </div>\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport CourseTableComponent from \"../components/CourseTableComponent\";\nimport CourseGridComponent from \"../components/CourseGridComponent\";\nimport courseService from \"../services/CourseService\";\n\n//the course list is playing the role of a container\n\nclass CourseListContainer extends React.Component {\n    state = {\n        layout: this.props.match.params.layout,\n        //empty array, placeholder to replace with fetched data from server\n        courses: [],\n        newCourseTitle: \"\"\n    };\n\n    componentDidMount() {\n        //playing the role of the controller\n        courseService.findAllCourses()\n            //then we set the state\n            .then(actualArrayOfCourses => this.setState({courses: actualArrayOfCourses}))\n    };\n\n    //function that gets notified when any of the properties changes because of some outside information change\n    componentDidUpdate(prevProp, prevState, snapshot) {\n        if(prevProp.match.params.layout !== this.props.match.params.layout) {\n            this.setState({\n                layout:this.props.match.params.layout\n            })\n        }\n    };\n\n    //new syntax for ES6; this code is === to\n    //function setLayout() {}\n    setLayout = (layout) => {\n        //dont do: this.state.layout = layout;\n\n        //this.setState({\n        //    layout:layout\n        //})\n        //instead of changing the state, we want to change the URL\n\n        this.props.history.push(`/${layout}/courses`)\n    };\n\n    addCourse = (title) => {\n        const newCourse = {\n            //we dont need this anymore bc the service will create this for us\n            //_id: (new Date()).getMilliseconds() + \"\",\n            title: title,\n            owner: \"me\",\n            modified: (new Date()).toDateString()\n        };\n\n        courseService.createCourse(newCourse).then(theActualNewCourse =>\n            this.setState((prevState) => {\n                return {\n                    //new syntax: adding a new course onto an array of previous courses\n                    courses: [\n                        ...prevState.courses,\n                        theActualNewCourse]\n                }\n            }))\n    };\n\n    deleteCourse = (courseToDelete) => {\n        courseService.deleteCourse(courseToDelete._id)\n            .then(status => this.setState((prevState) => {\n                return ({\n                    courses: prevState.courses.filter(course => {\n                        return course !== courseToDelete\n                    })\n                })\n            }))\n    };\n\n    render() {\n        return (\n            <div>\n                <h2>My Courses</h2>\n\n                <div className=\"wbdv-input wbdv-form input-group mb-3\">\n                    <input\n                        className=\"form-control\"\n                        type=\"text\"\n                        onChange={(event) => this.setState({\n                            newCourseTitle: event.target.value\n                        })}\n                        value={this.state.newCourseTitle}\n                        placeholder=\"Course Title\"/>\n                    <div className=\"input-group-append\">\n                        <button\n                            className=\"wbdv-btn wbdv-add btn btn-primary\"\n                            onClick={() => this.addCourse(\" \" + this.state.newCourseTitle)}>\n                            Add Course\n                        </button>\n                    </div>\n                </div>\n\n                {this.state.layout === \"table\" &&\n                <div>\n                    <button\n                        className=\"wbdv-btn wbdv-grid btn btn-light\"\n                        onClick={() => this.setLayout(\"grid\")}>\n                        Grid\n                    </button>\n                    <CourseTableComponent\n                        deleteCourse={this.deleteCourse}\n                        courses={this.state.courses}/>\n                </div>\n                }\n                {this.state.layout === \"grid\" &&\n                <div>\n                    <button\n                        className=\"wbdv-btn wbdv-table btn btn-light\"\n                        onClick={() => this.setLayout(\"table\")}>\n                        Table\n                    </button>\n                    <CourseGridComponent\n                        deleteCourse={this.deleteCourse}\n                        courses={this.state.courses}/>\n                </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default CourseListContainer;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nclass ModuleListComponent extends React.Component {\n    state = {\n        newModuleTitle: \"\",\n        editModule: {}\n    };\n\n    componentDidMount() {\n        //this.props.findAllModules();\n        this.props.findModules(this.props.params.courseId)\n    }\n\n    render() {\n        return (\n            <div>\n                <h4>Modules</h4>\n                <ul className=\"list-group\">\n                    {this.props.modules.map(module =>\n                        <div>\n                            <div key={module._id}\n                                 className=\"wbdv-btn btn list-group-item list-group-item-action\">\n\n                                {\n                                    this.state.editModule._id === module._id &&\n                                    <span>\n                                        <input onChange={\n                                            (event) => {\n                                                const newTitle = event.target.value;\n                                                this.setState(prevState => ({\n                                                    editModule: {\n                                                        ...prevState.editModule,\n                                                        title: newTitle\n                                                    }\n                                                }))\n                                            }\n                                        }\n                                               value={this.state.editModule.title}/>\n\n                                        <button onClick={() => {\n                                            this.props.updateModule(this.state.editModule._id, this.state.editModule);\n                                            this.setState({editModule: {}})}\n                                        }\n                                                type=\"button\"\n                                                className=\"btn btn-primary\">\n                                            Save\n                                        </button>\n                                        <button onClick={() => this.props.deleteModule(module._id)}\n                                                type=\"button\"\n                                                className=\"btn btn-danger\">\n                                             Delete\n                                        </button>\n                                        </span>\n                                }\n                                {\n                                    this.state.editModule._id !== module._id &&\n                                    <span>\n                                        <Link to={`/modules/${module._id}`}>\n                                            {module.title}\n                                         </Link>\n\n                                        <button onClick={() => this.setState({editModule: module})}\n                                                type=\"button\"\n                                                className=\"btn btn-light\">\n                                                    Edit\n                                        </button>\n                                    </span>\n                                }\n                            </div>\n                        </div>\n                    )}\n                </ul>\n\n                <div className=\"input-group\">\n                    <input value={this.state.newModuleTitle}\n                           placeholder=\"New Module Title\"\n                           onChange={(event) => this.setState({\n                               newModuleTitle: event.target.value\n                           })}\n                           className=\"form-control\"/>\n                    <div className=\"input-group-append\">\n                        <button onClick={() => this.props.addModule(\n                            this.props.params.courseId,\n                            {\n                            title: this.state.newModuleTitle\n                        })}\n                                type=\"button\"\n                                className=\"btn btn-primary\">\n                            Add\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ModuleListComponent;","// const findAllModules = () => {\n//     return fetch(\"http://wbdv-generic-server.herokuapp.com/api/001479351/modules\")\n//         .then(response => response.json())\n// };\n\n//restful services\nconst findModules = (courseId) => {\n    return fetch(`http://wbdv-generic-server.herokuapp.com/api/001479351/courses/${courseId}/modules`)\n        .then(response => response.json())\n};\n\nconst deleteModule = (moduleId) => {\n    return fetch(`http://wbdv-generic-server.herokuapp.com/api/001479351/modules/${moduleId}`,\n        {method: \"DELETE\"})\n        .then(response => response.json())\n};\n\nconst addModule = (courseId, module) => {\n    return fetch(`http://wbdv-generic-server.herokuapp.com/api/001479351/courses/${courseId}/modules`, {\n        method: \"POST\",\n        body: JSON.stringify(module),\n        headers: {\"content-type\": \"application/json\"}})\n        .then(response => response.json())\n};\n\nconst updateModule = (moduleId, module) => {\n    return fetch(`http://wbdv-generic-server.herokuapp.com/api/001479351/modules/${moduleId}`, {\n        method: \"PUT\",\n        body: JSON.stringify(module),\n        headers: {\"content-type\": \"application/json\"}})\n        .then(response => response.json())\n};\n\nexport default {\n    //\"findAllModules\": findAllModules\n    //findAllModules,\n    deleteModule,\n    addModule,\n    updateModule,\n    findModules\n}","import {connect} from \"react-redux\";\nimport ModuleListComponent from \"../components/ModuleListComponent\";\nimport ModuleService from \"../services/ModuleService\";\nimport moduleReducer from \"../reducers/moduleReducer\";\n\n//will receive the state form the store (via connect)\nconst stateToPropertyMapper = (state, match) => {\n    return {\n        modules: state.moduleReducer.modules,\n        newModuleTitle: state.moduleReducer.newModuleTitle,\n        params: match.params\n    }\n};\n\n//the callback function we are fed- the callback function that we can invoke to alert what is going on\nconst dispatchToPropertyMapper = (dispatch) => {\n    return {\n        findModules: (courseId) => {\n            ModuleService.findModules(courseId)\n                .then(courseModules => dispatch({\n                    type: \"FIND_MODULES\",\n                    modules: courseModules\n                }))\n        },\n        findAllModules: () => {\n            ModuleService.findAllModules()\n                .then(actualModules => dispatch({\n                    type: \"FIND_ALL_MODULES\",\n                    modules: actualModules\n                }))\n        },\n        updateModule: (moduleId, newModule) => {\n            ModuleService.updateModule(moduleId, newModule)\n                .then(status => dispatch({\n                    type: \"UPDATE_MODULE\",\n                    updatedModule: newModule\n                }))\n        },\n        addModule: (courseId, newModule) => {\n            ModuleService.addModule(courseId, newModule)\n                .then(actualNewModule => dispatch({\n                    type: \"ADD_MODULE\",\n                    newModule: newModule\n            }))\n        },\n        deleteModule: (moduleId) => {\n            ModuleService.deleteModule(moduleId)\n                .then(status => dispatch({\n                    type: \"DELETE_MODULE\",\n                    moduleId: moduleId\n                }))\n        }\n    }\n};\n\nconst ModuleListContainer = connect(\n    stateToPropertyMapper, dispatchToPropertyMapper\n)(\n    ModuleListComponent);\n\nexport default ModuleListContainer;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nclass LessonTabsComponent extends React.Component {\n    state = {\n        newLessonTitle: \"\",\n        editLesson: {}\n    };\n\n    componentDidMount() {\n        this.props.findLessons(this.props.params.moduleId)\n    }\n\n    render() {\n        return (\n            <div>\n                <ul className=\"wbdv-nav-tabs nav nav-tabs\">\n                    <li className=\"wbdv-nav-dropdown nav-item dropdown\">\n\n                        <a className=\"nav-link dropdown-toggle\"\n                              data-toggle=\"dropdown\" role=\"button\">\n                            Lessons\n                        </a>\n                        {/*<div className=\"dropdown-menu\">*/}\n                        {\n                            this.props.lessons.map(lesson =>\n                            <div>\n                                <a className=\"dropdown-item\" key={lesson._id}>\n                                    {\n                                        this.state.editLesson._id === lesson._id &&\n                                        <span>\n                                            <input onChange={\n                                                (event) => {\n                                                    const newTitle = event.target.value;\n                                                    this.setState(prevState => ({\n                                                        editLesson: {\n                                                            ...prevState.editLesson,\n                                                            title: newTitle\n                                                        }\n                                                    }))\n                                                }\n                                            }\n                                                   value={this.state.editLesson.title}/>\n\n                                                   <button onClick={() => {\n                                                       this.props.updateLesson(this.state.editLesson._id, this.state.editLesson);\n                                                       this.setState({editLesson: {}})\n                                                   }}\n                                                           type=\"button\"\n                                                           className=\"btn btn-primary\">Save\n                                                   </button>\n                                                    <button onClick={() => this.props.deleteLesson(lesson._id)}\n                                                            type=\"button\"\n                                                            className=\"btn btn-danger\">\n                                                        Delete\n                                                    </button>\n                                        </span>\n                                    }{\n                                    this.state.editLesson._id !== lesson._id &&\n                                    <span>\n                                            <Link to={`/lessons/${lesson._id}`}>\n                                                {lesson.title}\n                                            </Link>\n                                        <button onClick={() => this.setState({editLesson: lesson})}\n                                                type=\"button\"\n                                                className=\"btn btn-light\">\n                                                    Edit\n                                        </button>\n                                        </span>\n                                }\n                                </a>\n                            </div>\n                            )}\n                        {/*</div>*/}\n                    </li>\n                    <li>\n                        <div className=\"input-group\">\n                            <input value={this.state.newLessonTitle}\n                                   className=\"form-control\"\n                                   placeholder=\"New Lesson Title\"\n                                   onChange={(event) => this.setState({\n                                       newLessonTitle: event.target.value\n                                   })}/>\n                            <div className=\"input-group-append\">\n                                <button type=\"button\"\n                                        className=\"btn btn-primary\"\n                                        onClick={() => this.props.addLesson(\n                                            this.props.params.moduleId,\n                                            {\n                                                title: this.state.newLessonTitle\n                                            })}>\n                                    Add\n                                </button>\n                            </div>\n                        </div>\n                    </li>\n                </ul>\n\n            </div>\n        )\n    }\n}\n\nexport default LessonTabsComponent;","const findLessons = (moduleId) =>\n    fetch(`https://wbdv-generic-server.herokuapp.com/api/001479351/modules/${moduleId}/lessons`)\n        .then(response => response.json());\n\nconst addLesson = (moduleId, newLesson) =>\n    fetch(`https://wbdv-generic-server.herokuapp.com/api/001479351/modules/${moduleId}/lessons`, {\n        method: 'POST',\n        body: JSON.stringify(newLesson),\n        headers: {\n            'content-type': 'application/json'\n        }\n    })\n        .then(response => response.json());\n\nconst deleteLesson = (lessonId) => {\n    return fetch(`http://wbdv-generic-server.herokuapp.com/api/001479351/lessons/${lessonId}`,{\n        method: \"DELETE\"})\n        .then(response => response.json())\n};\n\nconst updateLesson = (lessonId, lesson) => {\n    return fetch(`http://wbdv-generic-server.herokuapp.com/api/001479351/lessons/${lessonId}`,{\n        method: \"PUT\",\n        body: JSON.stringify(lesson),\n        headers: {\"content-type\": \"application/json\"}})\n        .then(response => response.json())\n    };\n\nexport default {\n    deleteLesson,\n    addLesson,\n    updateLesson,\n    findLessons\n}","import {connect} from \"react-redux\";\nimport LessonTabsComponent from \"../components/LessonTabsComponent\";\nimport {addLesson, findLessons, deleteLesson, updateLesson} from \"../services/LessonService\";\nimport LessonService from \"../services/LessonService\";\n\n//same as ModuleListContainer, more modern syntax\nconst stateToPropertyMapper = (state, match) => ({\n    lessons: state.lessonReducer.lessons,\n    newLessonTitle: state.lessonReducer.newLessonTitle,\n    params: match.params\n});\n\nconst dispatchToPropertyMapper = (dispatch) => {\n    return {\n        updateLesson: (lessonId, newLesson) => {\n            LessonService.updateLesson(lessonId, newLesson)\n                .then(actualLesson => dispatch({\n                    type: \"UPDATE_LESSON\",\n                    newLesson\n                }))\n        },\n        addLesson: (moduleId, newLesson) => {\n            LessonService.addLesson(moduleId, newLesson)\n                .then(actualLesson => dispatch({\n                    type: \"ADD_LESSON\",\n                    newLesson\n                }))\n        },\n        findLessons: (moduleId) => {\n            LessonService.findLessons(moduleId)\n                .then(actualLessons => dispatch({\n                    type: \"FIND_LESSONS\",\n                    actualLessons\n                }))\n        },\n        deleteLesson: (lessonId) => {\n            LessonService.deleteLesson(lessonId)\n                .then(status => dispatch({\n                type: \"DELETE_LESSON\",\n                lessonId\n            }))\n        }\n    }\n};\n\nconst LessonTabsContainer = connect(\n    stateToPropertyMapper, dispatchToPropertyMapper\n)(\n    LessonTabsComponent\n);\n\nexport default LessonTabsContainer;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nclass TopicPillsComponent extends React.Component {\n    state = {\n        newTopicTitle: \"\",\n        editTopic: {}\n    };\n\n    componentDidMount() {\n        this.props.findTopics(this.props.params.lessonId)\n    }\n\n    render() {\n        return (\n            <div>\n                <ul className=\"wbdv-nav-pills nav nav-pills nav-fill\">\n                    {this.props.topics.map(topic =>\n                        <div>\n                            <li key={topic._id}\n                                className=\"wbdv-nav-item nav-item\">\n                                {\n                                    this.state.editTopic._id === topic._id &&\n                                    <span>\n                                        <input onChange={\n                                            (event) => {\n                                                const newTitle = event.target.value;\n                                                this.setState(prevState => ({\n                                                    editTopic: {\n                                                        ...prevState.editTopic,\n                                                        title:newTitle\n                                                    }\n                                                }))\n                                            }\n                                        }\n                                               value={this.state.editTopic.title}/>\n                                        <button type=\"button\"\n                                           className=\"btn btn-primary\"\n                                           onClick={() => {\n                                           this.props.updateTopic(this.state.editTopic._id,\n                                               this.state.editTopic);\n                                           this.setState({editTopic: {}})}}>\n                                            Save\n                                        </button>\n                                        <button type=\"button\"\n                                           className=\"btn btn-danger\"\n                                           onClick={() => this.props.deleteTopic(topic._id)}>\n                                            Delete\n                                        </button>\n                                    </span>\n                                }\n                                {\n                                    this.state.editTopic._id !== topic._id &&\n                                    <span>\n                                        <Link to={`/topics/${topic._id}`}>\n                                            {topic.title}\n                                        </Link>\n\n                                        <button onClick={() => this.setState({editTopic:topic})}\n                                                type=\"button\"\n                                                className=\"btn btn-light\">\n                                            Edit\n                                        </button>\n                                    </span>\n                                }\n                            </li>\n                        </div>\n                    )}\n                </ul>\n\n                <div className=\"input-group\">\n                    <input value={this.state.newTopicTitle}\n                           className=\"form-control\"\n                           placeholder=\"New Topic Title\"\n                           onChange={(event) => this.setState({\n                               newTopicTitle: event.target.value\n                           })}/>\n                    <div className=\"input-group-append\">\n                        <button type=\"button\"\n                                className=\"btn btn-primary\"\n                                onClick={() => this.props.addTopic(\n                                    this.props.params.lessonId,\n                                    {\n                                        title: this.state.newTopicTitle\n                                    })}>\n                            Add\n                        </button>\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default TopicPillsComponent;","import {connect} from \"react-redux\";\nimport {addTopic, findTopics, updateTopic} from \"../services/TopicService\";\nimport TopicPillsComponent from \"../components/TopicPillsComponent\";\nimport ModuleService from \"../services/ModuleService\";\n\nconst stateToPropertyMapper = (state, ownProps) => ({\n    topics: state.topicReducer.topics,\n    newTopicTitle: state.topicReducer.newTopicTitle,\n    params: ownProps.params\n});\n\nconst dispatchToPropertyMapper = (dispatch) => {\n    return {\n        updateTopic: (topicId, newTopic) => {\n            updateTopic(topicId, newTopic)\n                .then(actualLesson => dispatch({\n                    type: \"UPDATE_TOPIC\",\n                    newTopic\n                }))\n        },\n        addTopic: (lessonId, newTopic) => {\n            addTopic(lessonId, newTopic)\n                .then(actualTopic => dispatch({\n                    type: \"ADD_TOPIC\",\n                    newTopic\n                }))\n        },\n        findTopics: (lessonId) => {\n            findTopics(lessonId)\n                .then(actualTopics => dispatch({\n                    type: \"FIND_TOPICS\",\n                    actualTopics\n                }))\n        },\n        deleteTopic: (topicId) => {\n            ModuleService.deleteModule(topicId)\n                .then(status => dispatch({\n                    type: \"DELETE_LESSON\",\n                    topicId\n                }))\n        }\n    }\n};\n\nconst TopicPillsContainer = connect(\n    stateToPropertyMapper, dispatchToPropertyMapper\n)(\n    TopicPillsComponent\n);\n\nexport default TopicPillsContainer;","export const findTopics = (lessonId) =>\n    fetch(`https://wbdv-generic-server.herokuapp.com/api/001479351/lessons/${lessonId}/topics`)\n        .then(response => response.json());\n\nexport const addTopic = (lessonId, newTopic) =>\n    fetch(`https://wbdv-generic-server.herokuapp.com/api/001479351/lessons/${lessonId}/topics`, {\n        method: 'POST',\n        body: JSON.stringify(newTopic),\n        headers: {\n            'content-type': 'application/json'\n        }\n    })\n        .then(response => response.json());\n\nexport const deleteTopic = (topicId) => {\n    return fetch(`http://wbdv-generic-server.herokuapp.com/api/001479351/topics/${topicId}`,{\n        method: \"DELETE\"})\n        .then(response => response.json())\n};\n\nexport const updateTopic = (topicId, topic) => {\n    return fetch(`http://wbdv-generic-server.herokuapp.com/api/001479351/topics/${topicId}`,{\n        method: \"PUT\",\n        body: JSON.stringify(topic),\n        headers: {\"content-type\": \"application/json\"}})\n        .then(response => response.json())\n    };\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport ModuleListContainer from \"./ModuleListContainer\";\nimport LessonTabsContainer from \"./LessonTabsContainer\";\nimport TopicPillsContainer from \"./TopicPillsContainer\";\nimport courseService from \"../services/CourseService\";\n\n\n//if i need to maintain a state, then i must be a class\n//if i do not need to maintain a state, then i can be a function\n\nconst CourseEditorContainer = ({match}) => {\n    return (\n        <div className=\"container\">\n            {/*{match.params.courseId}*/}\n            {/*match.params.moduleId*/}\n\n            <Link to=\"/table/courses\">\n                Back\n            </Link>\n\n            {courseService.findCourseById(match.params.courseId).title}\n\n            <h2 className=\"wbdv-course-title\">CS 4550</h2>\n            <div>\n                <div className=\"row\">\n\n                    <div className=\" wbdv-module-list col-4 col-lg-3 col-md-4\">\n                        <ModuleListContainer {...match}/>\n                    </div>\n\n                    <div className=\"col-8 col-lg-9 col-md-8\">\n                        <br/>\n\n                        <div className=\"wbdv-lesson-tabs container horizontal-scrollable\">\n                            <div className=\"row text-center\">\n                                <LessonTabsContainer {...match}/>\n                            </div>\n                        </div>\n\n                        <br/>\n                        <div className=\"wbdv-topic-pills container horizontal-scrollable\">\n                            <div className=\"row text-center\">\n                                <TopicPillsContainer {...match}/>\n                            </div>\n                        </div>\n                        <br/>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default CourseEditorContainer;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nconst HomeComponent = () =>\n    <div>\n        <h1 className=\"wbdv-home wbdv-home-title\">Home</h1>\n\n        <div className=\"wbdv-list list-group\">\n\n            <Link className=\"wbdv-list-item list-group-item\"\n                  to=\"/table/courses\">\n                Course List\n            </Link>\n\n            <Link className=\"wbdv-list-item list-group-item\"\n                  to=\"/sign-in\">\n                Sign-in\n            </Link>\n\n            <Link className=\"wbdv-list-item list-group-item\"\n                  to=\"/sign-up\">\n                Sign-up\n            </Link>\n\n            <Link className=\"wbdv-list-item list-group-item\"\n                  to=\"/profile\">\n                Profile\n            </Link>\n\n        </div>\n\n    </div>;\n\nexport default HomeComponent;\n\n","import React from \"react\";\n\nconst SignInComponent = () =>\n    <div>\n        <div className=\"mx-auto container\">\n            <h2>Sign-in</h2>\n\n            <label htmlFor=\"username\">Username</label>\n            <input className=\"form-control wbdv-field wbdv-username\"\n                   id=\"username\"\n                   type=\"text\"\n                   placeholder=\"joe123\"/>\n\n            <label htmlFor=\"password\">Password</label>\n            <input className=\"form-control wbdv-field wbdv-password\"\n                   id=\"password\"\n                   type=\"password\"\n                   placeholder=\"********\"\n                   title=\"passwords must be at least 8 characters\"/>\n\n            <a href=\"#\"\n               className=\"btn btn-primary wbdv-button wbdv-login\">\n                Sign In\n            </a>\n\n            <br/>\n\n            <a href=\"#\"\n               className=\"wbdv-link wbdv-forgot-password\">Forgot Password?</a>\n\n            <div className=\"float-right\">Don't have an account?</div>\n            <br/>\n            <a href=\"#\"\n               className=\"float-right wbdv-link wbdv-register\">\n                Sign up\n            </a>\n\n            <a href=\"#\">Cancel</a>\n\n\n        </div>\n    </div>;\n\nexport default SignInComponent;","import React from \"react\";\n\nconst SignUpComponent = () =>\n    <div className=\"mx-auto container\">\n        <h1>Sign-up</h1>\n\n        <label htmlFor=\"username\">Username</label>\n        <input className=\"form-control wbdv-field wbdv-username\"\n               id=\"username\"\n               type=\"text\"\n               placeholder=\"joe123\"/>\n\n        <label htmlFor=\"password\">Password</label>\n        <input className=\"form-control wbdv-field wbdv-password\"\n               id=\"password\"\n               type=\"password\"\n               placeholder=\"********\"\n               title=\"passwords must be at least 8 characters\"/>\n\n        <label htmlFor=\"verify\">Verify Password</label>\n        <input className=\"form-control wbdv-field wbdv-password-verify\"\n               id=\"verify\"\n               type=\"password\"\n               placeholder=\"********\"/>\n\n        <a href=\"#\"\n           className=\"btn btn-primary wbdv-button wbdv-register\">\n            Sign Up\n        </a>\n\n        <br/>\n\n        <div className=\"float-right\">Already have an account?</div>\n        <br/>\n        <a className=\"float-right wbdv-link wbdv-login\"\n           href=\"#\">\n            Sign in\n        </a>\n\n        <a href=\"#\">Cancel</a>\n\n    </div>;\n\nexport default SignUpComponent;","import React from \"react\";\n\nconst ProfileComponent = () =>\n    <div className=\"container\">\n        <div className=\"alert alert-primary\" role=\"alert\">\n            Your updates have been saved.\n        </div>\n        <h2>Profile</h2>\n\n        <div>\n            <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\"\n                       htmlFor=\"username\">Username</label>\n                <div className=\"col-sm-10\">\n                    <input\n                        readOnly\n                        className=\"form-control wbdv-field wbdv-username\"\n                        id=\"username\"\n                        type=\"text\"\n                        placeholder=\"joe123\"/>\n                </div>\n            </div>\n\n            <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\"\n                       htmlFor=\"password\">Password</label>\n                <div className=\"col-sm-10\">\n                    <input\n                        className=\"form-control wbdv-field wbdv-password\"\n                        id=\"password\"\n                        type=\"password\"\n                        placeholder=\"********\"\n                        title=\"passwords must be at least 8 characters\"/>\n                </div>\n            </div>\n\n            <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\"\n                       htmlFor=\"email\">Email</label>\n                <div className=\"col-sm-10\">\n                    <input\n                        placeholder=\"joe@northeastern.edu\"\n                        className=\"form-control wbdv-field wbdv-email\"\n                        id=\"email\"\n                        type=\"text\"/>\n                </div>\n            </div>\n\n            <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\"\n                       htmlFor=\"number\">Phone Number</label>\n                <div className=\"col-sm-10\">\n                    <input\n                        placeholder=\"(123)456-7890\"\n                        className=\"form-control wbdv-field wbdv-phone\"\n                        id=\"number\"\n                        type=\"tel\"/>\n                </div>\n            </div>\n\n            <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\"\n                       htmlFor=\"dob\">Date of Birth</label>\n                <div className=\"col-sm-10\">\n                    <input\n                        className=\"form-control wbdv-field wbdv-dob\"\n                        id=\"dob\"\n                        type=\"date\"\n                        value=\"yyyy-mm-dd\"/>\n                </div>\n            </div>\n\n            <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\">\n                    Role</label>\n                <div className=\"col-sm-10\">\n                    <select className=\"wbdv-field wbdv-role\">\n                        <option value=\"FAC\">Faculty</option>\n                        <option value=\"STU\">Student</option>\n                        <option value=\"ADMIN\">Admin</option>\n                    </select>\n                </div>\n            </div>\n\n            <a className=\"btn btn-success btn-block wbdv-button wbdv-update\">\n                Update\n            </a>\n\n            <a className=\"btn btn-danger btn-block wbdv-button wbdv-logout\">\n                Sign out\n            </a>\n\n        </div>\n\n\n\n    </div>\n\nexport default ProfileComponent;","import React from \"react\";\nimport CourseListContainer from \"../containers/CourseListContainer\";\nimport CourseEditor from \"../containers/CourseEditorContainer\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport HomeComponent from \"./HomeComponent\";\nimport SignInComponent from \"./SignInComponent\";\nimport SignUpComponent from \"./SignUpComponent\";\nimport ProfileComponent from \"./ProfileComponent\";\nimport ModuleListContainer from \"../containers/ModuleListContainer\";\nimport LessonTabsContainer from \"../containers/LessonTabsContainer\";\nimport TopicPillsContainer from \"../containers/TopicPillsContainer\";\n\n//\"extends React.Component\"- inheriting React's ES6\nclass Whiteboard extends React.Component {\n\n    //we are overriding the render function\n    render() {\n        //render can only return one root element\n        return (\n            <BrowserRouter>\n                <div>\n                    <h1 className=\"wbdv-whiteboard whiteboard\">Whiteboard</h1>\n                    <Route path=\"/\"\n                           exact={true}\n                           component={HomeComponent}/>\n\n                    <Route path=\"/sign-in\" exact={true} component={SignInComponent}/>\n                    <Route path=\"/sign-up\" exact={true} component={SignUpComponent}/>\n                    <Route path=\"/profile\" exact={true} component={ProfileComponent}/>\n\n\n                    <Route path=\"/courses\"\n                           exact={true}\n                           component={CourseListContainer}/>\n\n                    {/* :layout is a variable */}\n                    <Route path=\"/:layout/courses\"\n                           exact={true}\n                           component={CourseListContainer}/>\n\n\n                    {/*<Route*/}\n                    {/*    path='/editor'*/}\n                    {/*    exact={true}*/}\n                    {/*    component={CourseEditor}/>*/}\n\n                    <Route\n                        path={['/editor/:courseId', '/editor/:courseId/modules/:moduleId']}\n                        exact={true}\n                        component={CourseEditor}/>\n\n                    {/*<Route*/}\n                    {/*    path='/modules'*/}\n                    {/*    exact={true}*/}\n                    {/*    component={ModuleListContainer}/>*/}\n\n                    <Route\n                        path={['/modules/:moduleId', '/modules/:moduleId/lessons/:lessonId']}\n                        exact={true}\n                        component={ModuleListContainer}/>\n\n                    {/*<Route*/}\n                    {/*    path='/lessons'*/}\n                    {/*    exact={true}*/}\n                    {/*    component={LessonTabsContainer}/>*/}\n\n                    <Route\n                        path={['/lessons/:lessonId', '/lessons/:lessonId/topics/:topicId']}\n                        exact={true}\n                        component={LessonTabsContainer}/>\n\n                    <Route\n                        path='/topics'\n                        exact={true}\n                        component={TopicPillsContainer}/>\n\n                </div>\n            </BrowserRouter>\n        )\n    }\n}\n\n//we are importing from CourseListContainer,\n//by default we export to Whiteboard\nexport default Whiteboard;","import React from 'react';\nimport Whiteboard from \"./components/Whiteboard\";\n\n//top level component\nfunction App() {\n  return (\n      <div className=\"container\">\n        {/*our root element, specific to our application*/}\n        <Whiteboard/>\n      </div>\n  );\n}\n\nexport default App;\n","\nconst initialState = {\n    newLessonTitle: \"\",\n    lessons: []\n};\n\nconst lessonReducer = (state=initialState, action) => {\n    switch(action.type) {\n        case \"UPDATE_LESSON\":\n            return {\n                ...state,\n                lessons: state.lessons.map(\n                    lesson => lesson._id === action.newLesson._id ?\n                        action.newLesson : lesson)\n            };\n        case \"DELETE_LESSON\":\n            return {\n                ...state,\n                lessons: state.lessons.filter(lesson => lesson._id !== action.lessonId)\n            };\n        case \"FIND_LESSONS\":\n            return {\n                ...state,\n                lessons: action.actualLessons\n            };\n        case \"ADD_LESSON\":\n            return {\n                ...state,\n                lessons: [...state.lessons, action.newLesson]\n            };\n        default:\n            return state;\n    }\n};\n\nexport default lessonReducer;","\nconst initialState = {\n    newTopicTitle: \"\",\n    topics: []\n};\n\nconst topicReducer = (state=initialState, action) => {\n    switch(action.type) {\n        case \"UPDATE_TOPIC\":\n            return {\n                ...state,\n                topics: state.topics.map(\n                    topic => topic._id === action.newTopic._id ?\n                        action.newTopic : topic)\n            };\n        case \"DELETE_TOPIC\":\n            return {\n                ...state,\n                topics: state.topics.filter(topic => topic._id !== action.topicId)\n            };\n        case \"FIND_TOPICS\":\n            return {\n                ...state,\n                topics: action.actualTopics\n            };\n        case \"ADD_TOPIC\":\n            return {\n                ...state,\n                topics: [...state.topics, action.newTopic]\n            };\n        default:\n            return state;\n    }\n};\n\nexport default topicReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {combineReducers, createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport moduleReducer from \"./reducers/moduleReducer\";\nimport App from \"./App\";\nimport lessonReducer from \"./reducers/lessonReducer\";\nimport topicReducer from \"./reducers/topicReducer\";\n\n//bc all of our components will no longer require state (stateless components),\n//ideally we will have only functions as opposed to classes\n\n//1. reducer generates the state\n//2. the state is stored in the store\n//3. the store is being Provided to the container\n//4. the container is extracting the state variable and putting (mapping) it\n//   in the property that the HelloWorld is expecting\n//5. the HelloWorld is rendered by the container\n\n//mega reducer that contains a bunch of reducer\nconst reducers = combineReducers({\n    moduleReducer, lessonReducer, topicReducer\n});\n\nconst store = createStore(reducers);\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}