{"version":3,"sources":["services/CourseService.js","components/CourseRowComponent.js","components/CourseTableComponent.js","components/CourseCardComponent.js","components/CourseGridComponent.js","containers/CourseListContainer.js","components/LessonTabsComponent.js","components/ModuleListComponent.js","components/TopicPillsComponent.js","containers/CourseEditorContainer.js","components/HomeComponent.js","components/SignInComponent.js","components/SignUpComponent.js","components/ProfileComponent.js","components/Whiteboard.js","App.js","serviceWorker.js","index.js"],"names":["course","fetch","method","body","JSON","stringify","headers","then","response","json","courseId","CourseRowComponent","state","edit","props","setEdit","setState","save","courseService","_id","status","updateCourseTitle","newTitle","prevState","title","className","this","key","to","onChange","event","target","value","owner","modified","onClick","deleteCourse","React","Component","CourseTableComponent","courses","map","CourseCardComponent","CourseGridComponent","CourseListContainer","layout","match","params","newCourseTitle","setLayout","history","push","addCourse","newCourse","Date","toDateString","theActualNewCourse","courseToDelete","filter","actualArrayOfCourses","prevProp","snapshot","type","placeholder","LessonTabsComponent","href","ModuleListComponent","TopicPillsComponent","CourseEditorContainer","HomeComponent","SignInComponent","htmlFor","id","SignUpComponent","ProfileComponent","role","readOnly","Whiteboard","path","exact","component","CourseEditor","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d055d737.chunk.js","sourcesContent":["const createCourse = (course) => {\n    //first fetch, !! by default fetch is a GET request\n    return fetch(\"https://wbdv-generic-server.herokuapp.com/api/shinekim/courses\", {\n        //change the default GET request to POST request\n        method: \"POST\",\n        //embed data that we want to create inside of the body as a JSON file\n        body: JSON.stringify(course),\n        //how is this data encoded? what is the data type for this?\n        headers: {\n            \"content-type\": \"application/json\"\n        }\n    })\n        .then(response => response.json())\n};\n\n\nconst deleteCourse = (courseId) => {\n    return fetch(\"https://wbdv-generic-server.herokuapp.com/api/shinekim/courses/\" + courseId, {\n        method: \"DELETE\",\n    })\n        .then(response => response.json())\n};\n\nconst updateCourse = (courseId, course) => {\n    return fetch(\"https://wbdv-generic-server.herokuapp.com/api/shinekim/courses/\" + courseId, {\n        //change the default GET request to PUT request\n        method: \"PUT\",\n        body: JSON.stringify(course),\n        headers: {\n            \"content-type\": \"application/json\"\n        }\n    })\n        .then(response => response.json())\n};\n\n\nconst findCourseById = (courseId) => {\n    return fetch(\"https://wbdv-generic-server.herokuapp.com/api/shinekim/courses/\" + courseId)\n        .then(response => response.json())\n};\n\nconst findAllCourses = () => {\n    //first we fetch the data from remote server\n    return fetch(\"https://wbdv-generic-server.herokuapp.com/api/shinekim/courses\")\n    //then we handle the response (convert to JSON)\n        .then(response => response.json())\n};\n\n\n//we can export individually or we can export as one big object\nexport default {\n    //\"createCourse\": createCourse,\n    //\"deleteCourse\": deleteCourse,\n    //\"findCourseById\": findCourseById,\n    //\"findAllCourses\": findAllCourses\n    createCourse,\n    deleteCourse,\n    findCourseById,\n    findAllCourses,\n    updateCourse\n}","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport courseService from \"../services/CourseService\";\n\nexport default class CourseRowComponent extends React.Component {\n    //the local state field will show whether an element is currently being \"edited\" or not\n    state = {\n        edit: false,\n\n        //this is our own copy of course\n        course: this.props.course\n    };\n\n    //function to set the local state editing to T/F\n    setEdit = (edit) =>\n        this.setState({edit: edit});\n\n\n    save = () => {\n        courseService.updateCourse(\n            this.state.course._id,\n            //our course should already have the new title\n            this.state.course)\n            //after status comes back as positive, we can set the setEdit to false\n            .then(status => this.setEdit(false))\n    };\n\n    updateCourseTitle = (newTitle) =>\n        this.setState(prevState => ({\n            course: {\n                ...prevState.course,\n                title: newTitle\n            }\n        }));\n\n    render() {\n        return (\n            //reminder: props are read only !!!\n        <tr className={this.state.edit ? \"table-secondary\": \"\"} key={this.props.course._id}>\n            <td>\n                {/*Making the title and input field mutually exclusive to each other\n                if the state is not in edit-mode, show title\n                if the state is in edit-mode, show input field*/}\n                {!this.state.edit &&\n                    // below code = \"/editor/\"+ this.state.course._id\n                    <Link to={`/editor/${this.state.course._id}`}>\n                        {this.state.course.title}\n                    </Link>\n                        }\n\n\n                {this.state.edit && <input\n                    className=\"wbdv-form wbdv-input form-control\"\n                    onChange={(event) => this.updateCourseTitle(event.target.value)}\n                    value={this.state.course.title}/>}\n            </td>\n\n            <td>{this.state.course.owner}</td>\n            <td>{this.state.course.modified}</td>\n            <td>\n                {!this.state.edit &&\n                <button\n                    className=\"wbdv-btn wbdv-edit btn btn-secondary\"\n                    onClick={() => this.setEdit(true)}>Edit</button>\n                }\n\n                {this.state.edit &&\n                <span>\n                    <button\n                        className=\"wbdv-btn wbdv-save btn btn-primary\"\n                        onClick={this.save}>Save</button>\n                    <button\n                        className=\"wbdv-btn wbdv-delete btn btn-danger\"\n                        onClick={() => this.props.deleteCourse(this.props.course)}>\n                        Delete\n                </button>\n                </span> }\n            </td>\n        </tr>\n        )\n    }\n}","import React from \"react\";\nimport CourseRowComponent from \"./CourseRowComponent\";\n\nexport default class CourseTableComponent extends React.Component {\n    render() {\n        return (\n\n            <div>\n                <h3></h3>\n\n                <table className=\"wbdv-table table\">\n                    <thead>\n                    <tr>\n                        <th className=\"wbdv-course-title\">Title</th>\n                        <th className=\"wbdv-course-owner\">Owner</th>\n                        <th className=\"wbdv-course-modified\">Last Modified</th>\n                        <th>\n                            <button className=\"wbdv-btn wbdv-sort btn btn-light\">Sort</button>\n                        </th>\n                    </tr>\n                    </thead>\n\n                    <tbody>\n                    {\n                        //we want to iterate over the array\n                        this.props.courses.map(course =>\n                            <CourseRowComponent\n                                deleteCourse={this.props.deleteCourse}\n                                key={course._id}\n                                course={course}/> )\n                    }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport courseService from \"../services/CourseService\";\n\nexport default class CourseCardComponent extends React.Component {\n    state = {\n        edit: false,\n        course: this.props.course\n    };\n\n    setEdit = (edit) =>\n        this.setState({edit: edit});\n\n    save = () => {\n        courseService.updateCourse(\n            this.state.course._id,\n            this.state.course)\n            .then(status => this.setEdit(false))\n    };\n\n    updateCourseTitle = (newTitle) =>\n        this.setState(prevState => ({\n            course: {\n                ...prevState.course,\n                title: newTitle\n            }\n        }));\n\n\n    render() {\n        return (\n\n            <div className=\"col mb-4\"\n                 key={this.props.course._id}>\n\n                <div className={this.state.edit ?\n                    \"wbdv-card card text-center border-primary bg-light\" :\n                    \"wbdv-card card text-center bg-light\"}>\n\n                    <h5> &nbsp; </h5>\n                    <h3 className=\"wbdv-card-title card-title text-center\">\n\n                        <div>\n                            {!this.state.edit &&\n                            <Link to={`/editor/${this.state.course._id}`}>\n                                {this.state.course.title}\n                            </Link>}\n                        </div>\n                        <div>\n                            {this.state.edit &&\n                            <input className=\"wbdv-card-input form-control\"\n                                   onChange={(event) => this.updateCourseTitle(event.target.value)}\n                                   value={this.state.course.title}/>\n                            }\n                        </div>\n                    </h3>\n\n                    <div className=\"wbdv-card-body card-body\">\n                        <p className=\"wbdv-card-text card-text\">Owner: {this.state.course.owner}</p>\n                        <p className=\"wbdv-card-text card-text\">\n                            <small className=\"text-muted\">\n                                Last Modified: {this.state.course.modified}\n                            </small>\n                        </p>\n                        <div>\n                            {!this.state.edit &&\n                            <button className=\"wbdv-edit wbdv-btn btn btn-secondary\"\n                                    onClick={() => this.setEdit(true)}>\n                                Edit\n                            </button>}\n                            {this.state.edit &&\n                            <span>\n                                <button className=\"wbdv-btn wbdv-save btn btn-primary\"\n                                        onClick={this.save}>\n                                Save\n                                </button>\n                                <button className=\"wbdv-btn wbdv-delete btn btn-danger\"\n                                        onClick={() => this.props.deleteCourse(this.props.course)}>\n                                Delete\n                                </button>\n                            </span>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport CourseCardComponent from \"./CourseCardComponent\";\n\nexport default class CourseGridComponent extends React.Component {\n    render() {\n        return (\n            <div>\n                <h3></h3>\n\n                <div className=\"wbdv-grid row row-cols-1 row-cols-xs-1 row-cols-sm-2\n                                row-cols-md-3 row-cols-lg-4 row-cols-xl-6\">\n                    {\n                        this.props.courses.map(course =>\n                            <CourseCardComponent\n                                deleteCourse={this.props.deleteCourse}\n                                key={course._id}\n                                course={course}/>)\n                    }\n                </div>\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport CourseTableComponent from \"../components/CourseTableComponent\";\nimport CourseGridComponent from \"../components/CourseGridComponent\";\nimport courseService from \"../services/CourseService\";\n\n//the course list is playing the role of a container\n\nclass CourseListContainer extends React.Component {\n    state = {\n        layout: this.props.match.params.layout,\n        //empty array, placeholder to replace with fetched data from server\n        courses: [],\n        newCourseTitle: \"\"\n    };\n\n    componentDidMount() {\n        //playing the role of the controller\n        courseService.findAllCourses()\n            //then we set the state\n            .then(actualArrayOfCourses => this.setState({courses: actualArrayOfCourses}))\n    };\n\n    //function that gets notified when any of the properties changes because of some outside information change\n    componentDidUpdate(prevProp, prevState, snapshot) {\n        if(prevProp.match.params.layout !== this.props.match.params.layout) {\n            this.setState({\n                layout:this.props.match.params.layout\n            })\n        }\n    };\n\n    //new syntax for ES6; this code is === to\n    //function setLayout() {}\n    setLayout = (layout) => {\n        //dont do: this.state.layout = layout;\n\n        //this.setState({\n        //    layout:layout\n        //})\n        //instead of changing the state, we want to change the URL\n\n        this.props.history.push(`/${layout}/courses`)\n    };\n\n    addCourse = (title) => {\n        const newCourse = {\n            //we dont need this anymore bc the service will create this for us\n            //_id: (new Date()).getMilliseconds() + \"\",\n            title: title,\n            owner: \"me\",\n            modified: (new Date()).toDateString()\n        };\n\n        courseService.createCourse(newCourse).then(theActualNewCourse =>\n            this.setState((prevState) => {\n                return {\n                    //new syntax: adding a new course onto an array of previous courses\n                    courses: [\n                        ...prevState.courses,\n                        theActualNewCourse]\n                }\n            }))\n    };\n\n    deleteCourse = (courseToDelete) => {\n        courseService.deleteCourse(courseToDelete._id)\n            .then(status => this.setState((prevState) => {\n                return ({\n                    courses: prevState.courses.filter(course => {\n                        return course !== courseToDelete\n                    })\n                })\n            }))\n    };\n\n    render() {\n        return (\n            <div>\n                <h2>My Courses</h2>\n\n                <div className=\"wbdv-input wbdv-form input-group mb-3\">\n                    <input\n                        className=\"form-control\"\n                        type=\"text\"\n                        onChange={(event) => this.setState({\n                            newCourseTitle: event.target.value\n                        })}\n                        value={this.state.newCourseTitle}\n                        placeholder=\"Course Title\"/>\n                    <div className=\"input-group-append\">\n                        <button\n                            className=\"wbdv-btn wbdv-add btn btn-primary\"\n                            onClick={() => this.addCourse(\" \" + this.state.newCourseTitle)}>\n                            Add Course\n                        </button>\n                    </div>\n                </div>\n\n                {this.state.layout === \"table\" &&\n                <div>\n                    <button\n                        className=\"wbdv-btn wbdv-grid btn btn-light\"\n                        onClick={() => this.setLayout(\"grid\")}>\n                        Grid\n                    </button>\n                    <CourseTableComponent\n                        deleteCourse={this.deleteCourse}\n                        courses={this.state.courses}/>\n                </div>\n                }\n                {this.state.layout === \"grid\" &&\n                <div>\n                    <button\n                        className=\"wbdv-btn wbdv-table btn btn-light\"\n                        onClick={() => this.setLayout(\"table\")}>\n                        Table\n                    </button>\n                    <CourseGridComponent\n                        deleteCourse={this.deleteCourse}\n                        courses={this.state.courses}/>\n                </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default CourseListContainer;\n","import React from \"react\";\n\nconst LessonTabsComponent = () => {\n    return(\n        <div className=\"tabbable\">\n            <ul className=\"wbdv-nav-tabs nav nav-tabs\">\n                <li className=\"wbdv-nav-item nav-item\">\n                    <a className=\"nav-link active\" href=\"#\">Lesson 1</a>\n                </li>\n                <li className=\"wbdv-nav-item nav-item\">\n                    <a className=\"nav-link\" href=\"#\">Lesson 2</a>\n                </li>\n                <li className=\"wbdv-nav-item nav-item\">\n                    <a className=\"nav-link\" href=\"#\">Lesson 3</a>\n                </li>\n                <li className=\"wbdv-nav-item nav-item\">\n                    <a className=\"nav-link\" href=\"#\">Lesson 4</a>\n                </li>\n                <li className=\"wbdv-nav-item nav-item\">\n                    <a className=\"nav-link\" href=\"#\">Lesson 5</a>\n                </li>\n                <li className=\"wbdv-nav-item nav-item\">\n                    <a className=\"nav-link\" href=\"#\">Lesson 6</a>\n                </li>\n                <li className=\"wbdv-nav-item nav-item\">\n                    <a className=\"nav-link\" href=\"#\">Add</a>\n                </li>\n\n            </ul>\n        </div>\n    )\n};\n\nexport default LessonTabsComponent;","import React from \"react\";\n\nconst ModuleListComponent = () =>\n    <div>\n        <ul className=\"list-group\">\n            <button type=\"button\" className=\"wbdv-btn list-group-item list-group-item-action active\">Module A</button>\n            <button type=\"button\" className=\"wbdv-btn list-group-item list-group-item-action\">Module B</button>\n            <button type=\"button\" className=\"wbdv-btn list-group-item list-group-item-action\">Module C</button>\n            <button type=\"button\" className=\"wbdv-btn list-group-item list-group-item-action\">Module D</button>\n            <button type=\"button\" className=\"wbdv-btn list-group-item list-group-item-action\">Module E</button>\n            <button type=\"button\" className=\"wbdv-btn list-group-item list-group-item-action\">Module F</button>\n            <button type=\"button\" className=\"wbdv-btn list-group-item list-group-item-action\">Module G</button>\n            <button type=\"button\" className=\"wbdv-btn list-group-item list-group-item-action\">Module H</button>\n            <button type=\"button\" className=\"wbdv-btn list-group-item list-group-item-action\">Module I</button>\n            <button type=\"button\" className=\"wbdv-btn list-group-item list-group-item-action\">Module J</button>\n            <button type=\"button\" className=\"wbdv-btn list-group-item list-group-item-action\">Add</button>\n        </ul>\n    </div>\n;\n\nexport default ModuleListComponent;","import React from \"react\";\n\nconst TopicPillsComponent = () => {\n    return (\n        <div>\n            <ul className=\"wbdv-nav wbdv-nav-pills nav nav-pills\">\n                <li className=\"wbdv-nav-item nav-item\">\n                    <a className=\"nav-link active\" href=\"#\">Topic 1</a>\n                </li>\n                <li className=\"wbdv-nav-item nav-item\">\n                    <a className=\"nav-link\" href=\"#\">Topic 2</a>\n                </li>\n                <li className=\"wbdv-nav-item nav-item\">\n                    <a className=\"nav-link\" href=\"#\">Topic 3</a>\n                </li>\n            </ul>\n        </div>\n    )\n};\n\nexport default TopicPillsComponent;","import React from \"react\";\nimport LessonTabsComponent from \"../components/LessonTabsComponent\";\nimport ModuleListComponent from \"../components/ModuleListComponent\";\nimport {Link} from \"react-router-dom\";\nimport TopicPillsComponent from \"../components/TopicPillsComponent\";\n\n//if i need to maintain a state, then i must be a class\n//if i do not need to maintain a state, then i can be a function\n\nconst CourseEditorContainer = () => {\n    return (\n        <div className=\"container\">\n            <Link to=\"/table/courses\">\n                Back\n            </Link>\n\n            <h2 className=\"wbdv-course-title\">CS1234</h2>\n            <div>\n                <div className=\"row\">\n\n                    <div className=\" wbdv-module-list col-4 col-lg-3 col-md-4\">\n                        <ModuleListComponent/>\n                    </div>\n\n                    <div className=\"col-8 col-lg-9 col-md-8\">\n                        <br/>\n\n                        <div className=\"wbdv-lesson-tabs container horizontal-scrollable\">\n                            <div className=\"row text-center\">\n                                <LessonTabsComponent/>\n                            </div>\n                        </div>\n\n                        <br/>\n                        <div className=\"wbdv-topic-pills container horizontal-scrollable\">\n                            <div className=\"row text-center\">\n                                <TopicPillsComponent/>\n                            </div>\n                        </div>\n                        <br/>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\n\nexport default CourseEditorContainer;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nconst HomeComponent = () =>\n    <div>\n        <h1 className=\"wbdv-home wbdv-home-title\">Home</h1>\n\n        <div className=\"wbdv-list list-group\">\n\n            <Link className=\"wbdv-list-item list-group-item\"\n                  to=\"/editor\">\n                Course Editor\n            </Link>\n\n            <Link className=\"wbdv-list-item list-group-item\"\n                  to=\"/table/courses\">\n                Course List\n            </Link>\n\n            <Link className=\"wbdv-list-item list-group-item\"\n                  to=\"/sign-in\">\n                Sign-in\n            </Link>\n\n            <Link className=\"wbdv-list-item list-group-item\"\n                  to=\"/sign-up\">\n                Sign-up\n            </Link>\n\n            <Link className=\"wbdv-list-item list-group-item\"\n                  to=\"/profile\">\n                Profile\n            </Link>\n\n        </div>\n\n\n    </div>;\n\nexport default HomeComponent;\n\n","import React from \"react\";\n\nconst SignInComponent = () =>\n    <div>\n        <div className=\"mx-auto container\">\n            <h2>Sign-in</h2>\n\n            <label htmlFor=\"username\">Username</label>\n            <input className=\"form-control wbdv-field wbdv-username\"\n                   id=\"username\"\n                   type=\"text\"\n                   placeholder=\"joe123\"/>\n\n            <label htmlFor=\"password\">Password</label>\n            <input className=\"form-control wbdv-field wbdv-password\"\n                   id=\"password\"\n                   type=\"password\"\n                   placeholder=\"********\"\n                   title=\"passwords must be at least 8 characters\"/>\n\n            <a href=\"#\"\n               className=\"btn btn-primary wbdv-button wbdv-login\">\n                Sign In\n            </a>\n\n            <br/>\n\n            <a href=\"#\"\n               className=\"wbdv-link wbdv-forgot-password\">Forgot Password?</a>\n\n            <div className=\"float-right\">Don't have an account?</div>\n            <br/>\n            <a href=\"#\"\n               className=\"float-right wbdv-link wbdv-register\">\n                Sign up\n            </a>\n\n            <a href=\"#\">Cancel</a>\n\n\n        </div>\n    </div>;\n\nexport default SignInComponent;","import React from \"react\";\n\nconst SignUpComponent = () =>\n    <div className=\"mx-auto container\">\n        <h1>Sign-up</h1>\n\n        <label htmlFor=\"username\">Username</label>\n        <input className=\"form-control wbdv-field wbdv-username\"\n               id=\"username\"\n               type=\"text\"\n               placeholder=\"joe123\"/>\n\n        <label htmlFor=\"password\">Password</label>\n        <input className=\"form-control wbdv-field wbdv-password\"\n               id=\"password\"\n               type=\"password\"\n               placeholder=\"********\"\n               title=\"passwords must be at least 8 characters\"/>\n\n        <label htmlFor=\"verify\">Verify Password</label>\n        <input className=\"form-control wbdv-field wbdv-password-verify\"\n               id=\"verify\"\n               type=\"password\"\n               placeholder=\"********\"/>\n\n        <a href=\"#\"\n           className=\"btn btn-primary wbdv-button wbdv-register\">\n            Sign Up\n        </a>\n\n        <br/>\n\n        <div className=\"float-right\">Already have an account?</div>\n        <br/>\n        <a className=\"float-right wbdv-link wbdv-login\"\n           href=\"#\">\n            Sign in\n        </a>\n\n        <a href=\"#\">Cancel</a>\n\n    </div>;\n\nexport default SignUpComponent;","import React from \"react\";\n\nconst ProfileComponent = () =>\n    <div className=\"container\">\n        <div className=\"alert alert-primary\" role=\"alert\">\n            Your updates have been saved.\n        </div>\n        <h2>Profile</h2>\n\n        <div>\n            <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\"\n                       htmlFor=\"username\">Username</label>\n                <div className=\"col-sm-10\">\n                    <input\n                        readOnly\n                        className=\"form-control wbdv-field wbdv-username\"\n                        id=\"username\"\n                        type=\"text\"\n                        placeholder=\"joe123\"/>\n                </div>\n            </div>\n\n            <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\"\n                       htmlFor=\"password\">Password</label>\n                <div className=\"col-sm-10\">\n                    <input\n                        className=\"form-control wbdv-field wbdv-password\"\n                        id=\"password\"\n                        type=\"password\"\n                        placeholder=\"********\"\n                        title=\"passwords must be at least 8 characters\"/>\n                </div>\n            </div>\n\n            <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\"\n                       htmlFor=\"email\">Email</label>\n                <div className=\"col-sm-10\">\n                    <input\n                        placeholder=\"joe@northeastern.edu\"\n                        className=\"form-control wbdv-field wbdv-email\"\n                        id=\"email\"\n                        type=\"text\"/>\n                </div>\n            </div>\n\n            <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\"\n                       htmlFor=\"number\">Phone Number</label>\n                <div className=\"col-sm-10\">\n                    <input\n                        placeholder=\"(123)456-7890\"\n                        className=\"form-control wbdv-field wbdv-phone\"\n                        id=\"number\"\n                        type=\"tel\"/>\n                </div>\n            </div>\n\n            <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\"\n                       htmlFor=\"dob\">Date of Birth</label>\n                <div className=\"col-sm-10\">\n                    <input\n                        className=\"form-control wbdv-field wbdv-dob\"\n                        id=\"dob\"\n                        type=\"date\"\n                        value=\"yyyy-mm-dd\"/>\n                </div>\n            </div>\n\n            <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\">\n                    Role</label>\n                <div className=\"col-sm-10\">\n                    <select className=\"wbdv-field wbdv-role\">\n                        <option value=\"FAC\">Faculty</option>\n                        <option value=\"STU\">Student</option>\n                        <option value=\"ADMIN\">Admin</option>\n                    </select>\n                </div>\n            </div>\n\n            <a className=\"btn btn-success btn-block wbdv-button wbdv-update\">\n                Update\n            </a>\n\n            <a className=\"btn btn-danger btn-block wbdv-button wbdv-logout\">\n                Sign out\n            </a>\n\n        </div>\n\n\n\n    </div>\n\nexport default ProfileComponent;","import React from \"react\";\nimport CourseListContainer from \"../containers/CourseListContainer\";\nimport CourseEditor from \"../containers/CourseEditorContainer\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport HomeComponent from \"./HomeComponent\";\nimport SignInComponent from \"./SignInComponent\";\nimport SignUpComponent from \"./SignUpComponent\";\nimport ProfileComponent from \"./ProfileComponent\";\n\n//\"extends React.Component\"- inheriting React's ES6\nclass Whiteboard extends React.Component {\n\n    //we are overriding the render function\n    render() {\n        //render can only return one root element\n        return (\n            <BrowserRouter>\n                <div>\n                    <h1 className=\"wbdv-whiteboard whiteboard\">Whiteboard</h1>\n                    <Route path=\"/\"\n                           exact={true}\n                           component={HomeComponent}/>\n\n                    <Route path=\"/sign-in\" exact={true} component={SignInComponent}/>\n                    <Route path=\"/sign-up\" exact={true} component={SignUpComponent}/>\n                    <Route path=\"/profile\" exact={true} component={ProfileComponent}/>\n\n\n                    <Route path=\"/courses\"\n                           exact={true}\n                           component={CourseListContainer}/>\n\n                    {/* :layout is a variable */}\n                    <Route path=\"/:layout/courses\"\n                           exact={true}\n                           component={CourseListContainer}/>\n\n\n                    <Route path=\"/editor\"\n                           //exact={true}\n                           component={CourseEditor}/>\n\n                </div>\n            </BrowserRouter>\n        )\n    }\n}\n\n//we are importing from CourseListContainer,\n//by default we export to Whiteboard\nexport default Whiteboard;","import React from 'react';\nimport Whiteboard from \"./components/Whiteboard\";\n\n//top level component\nfunction App() {\n  return (\n      <div className=\"container\">\n        {/*our root element, specific to our application*/}\n        <Whiteboard/>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}